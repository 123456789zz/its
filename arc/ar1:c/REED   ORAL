DRAFT


TO:	Area II Committee

DATE:	April 22, 1975

RE:	Oral Qualifying Examination for Mr. Dave Reed



	An oral examination of Mr. Reed was held on Friday April 18,
by a committee consisting of Professors Mitter, Schroeder and Hewitt
(chairman).  Mr. Reed spent about forty five minutes discussing his
thesis work, and after a recess spent over an hour answering questions
and solving problems on the blackboard.  Dave performed exceedingly
well on the problems and his masters thesis research is first rate.
On the basis of all the evidence the committee felt that Mr. Reed
should be p_a_s_s_e_d_ and be q_u_a_l_i_f_i_e_d_ at this time in the doctoral program.

	Dave's thesis concerns simplifying and generalizing the
implementation of processes in MULTICS.  Currently processes in
MULTICS provide many useful services for the user but they are
expensive to create and maintain.  Dave has taken the approach of
building a small fixed number of virtual processors as a base on which
to build the general MULTICS processes.  The capabilities of virtual
processors are closely matched to the capabilities of the actual
physical processors of the machine.  Two very important design goals
of his thesis are to simplify and increase the security of MULTICS.
Professor Mitter asked how Dave could be sure that the security of
MULTICS had in fact been increased by these measures.  Professor
Hewitt asked Dave to describe similarities and differences of his
virtual processors and the virtual machines as implemented on the
IBM-370.  Professor Mitter asked Dave about the possibilities for
formally modeling his implementation with Petri Nets.  Dave had tried
this but found the restriction of not being able to add new places or
transitions to a Petri to be a crucial deficiency in the model.  This 
limitation restricts Petri Nets to finite state control.

	Professor Schroeder then asked Dave to describe the techniques
of contiguous allocation and block allocation memory schemes.  Dave
answered the question succinctly pointing out the relative advantages and
disadvantages of each scheme.  Professor Schroeder then asked Dave to
give a rough calculation of the wasted space for each scheme.  Dave
did the calculation assuring a uniform distribution of block sizes.
Professor Schroeder then pointed out that a uniform distribution was
not a realistic assumption.

	Professor Hewitt asked Dave to implement LISP lists in the   lambda-
calculus.  Dave proceeded to do this by giving  lambda-expressions for
CONS, CAR, CDR.  He was asked whether his definitions would run if
translated into LISP.  Dave answered that it depended on the version
of LISP and explained two common schemes for implementing LISP.
Professor Hewitt then asked if he could translate his definitions of CONS 
into an ALGOL-like language with procedures as values.  Dave easily did this 
and explained how the usual implementation of ALGOL would have to be changed.
Dave was then asked to add operations RPLACA and RPLACD to his definition of
CONS.  He did this and explained how the change further affected the 
implementation of the language.

	Professor Mitter asked Dave to formally define the notion of a
finite state machine.  Dave was a little rusty on his automata theory
but was able to come up with the defintion.  He was then asked to
define the reduced machine after some thrashing around he hit upon the
idea of a homorphism.

			Sincerely,



			Carl E. Hewitt

CEH/yw