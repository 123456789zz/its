;;;-*-Midas-*-

TITLE DRAGON -- top-level daemon
	
;;; The ITS system job looks for the file DSK:SYS;ATSIGN DRAGON, and if it exists, 
;;; launches this DRAGON daemon. When launched, DRAGON logs in as TARAKA and searches
;;; the CHANNA directory for files whose FN1 is RAKASH. Any that it finds, it launches
;;; as daemons.

;;;
;;; The source for DRAGON has been long lost. When ITS was active, the last time it
;;; was built was in 1977. This source was recreated from the binary by EJS on
;;; on 2016-11-15. When assembled, this version results in an identical binary
;;; to the one that was included in the PI/MX distribution, and therefore to the
;;; version in place on MC/AI at the time of the shutdown of those systems.
;;;
;;; Note: I'm sure some of the constants in this file should be replaced with
;;; symbolic constants. At this point, I haven't yet figured out what they should
;;; all be (it's been over 36 years since I last used ITS at MIT.  As I and others
;;; see fit, we can update this source to be more in keeping with the standards
;;; expected of ITS developers!  -- EJS@MIT-MC (today: eric@swenson.org)
;;;

a=1
b=2
c=3

diric=4
dskic=5
usrch=6

.insrt system; fsdefs
dirbsz=2000

taraka=sixbit /TARAKA/
channa=sixbit /CHANNA/
rakash=sixbit /RAKASH/

lpdl==:100.
.vector pdl(lpdl)

taraka:	.call [setz        ;; login as TARAKA
	   sixbit/LOGIN/
	   [ taraka ]
           setzi 0]
	 jfcl               ;; ignore errors logging in
	.suset [.ssnam,,[channa]]       ;; set SNAME to CHANNA
	;; open CHANNA UDIR
	.open diric, [.bii,,'DSK ? sixbit/.FILE./ ? sixbit /(DIR)/]
	  jsr die
	.iot diric, [-dirbsz,,dirblk]  ;; read in UDIR
	.close diric,
	move a, dirblk+1   ;; get offset to name area into R1
	addi a, dirblk     ;; convert to address of name area
dr1:	cail a, [ taraka ] ;; have we reached end of buffer?
	 jsr die          ;; yes, abort
	move b, ufn1(a)    ;; get FN1 into R2
	camn b, [ rakash ] ;; is FN1 == RAKASH
	 .call [setz       ;; yes, open the file
	  sixbit /OPEN/
	  [ .uii,,dskic ]
	  [ sixbit /DSK/ ]  ;; DSK: device
	  [ rakash ]        ;; FN1
	  ufn2(a)           ;; FN2 (from dirblk in R1 + 1)
          setz [ channa ]]
	jrst nxt         ;; try next file
	  .call [setz            ;; start create daemon job
	    SIXBIT/OPEN/
	    [ .uao,,usrch ]
	    [ sixbit /USR/ ]  ;; USR: device
            %climm,,0         ;; use uname of TARAKA
            setz ufn2(a)]     ;; use jname of FN2 of daemon
	  jrst nxt            ;; process next file on error
	  .reset usrch,
          .call    [setz         ;; load program into job
	    sixbit/LOAD/
            %climm,,usrch       ;; specify job channel
            setzi dskic]        ;; specify file channel
	  jrst nxc            ;; on error, clean up job and process next file
	  move b, ufn2(a)            ;; get FN2/Job name in R2
          .uset usrch, [.ssnam,,b]  ;; set SNAME of job
	  .iot dskic, b             ;; get starting address?
	  hrrzs    b                 ;; zero out instruction opcode?
  	  .uset usrch, [.supc,,b]   ;; set starting address of new job
	  .call [setz                ;; disown job (doc doesn't seem to match
            SIXBIT/DISOWN/           ;;  this call from sysdoc; _calls 127
            movei usrch             ;; channel to job
            movsi 5 ((setz))]        ;; control bits
 	 .value                      ;; kill ourselves on error?
	 caia
nxc:    .uclose  usrch,            ;; kill job
nxt:  .close   dskic,            ;; close file
         .close   usrch,            ;; close job
         addi     a, lunblk          ;; compute address of next file
         jrst     dr1               ;; and loop

die:   0
       .logout
       .value

ufd:   block 2000

	end taraka
