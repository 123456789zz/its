;;; DEUNA/DELUA definitions			-*-MIDAS-*-
;;;
;;; Copyright (C) 1999 Massachusetts Institute of Technology
;;; Copyright (C) 2018 Adam Sampson <ats@offog.org>
;;;
;;; This program is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation, either version 2 of the License, or
;;; (at your option) any later version.
;;;
;;; This program is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program. If not, see <https://www.gnu.org/licenses/>.

.AUXIL

IFNDEF DEFSYM,[	;ALLOW USER TO USE SYMBOLS IN OTHER WAYS IF HE WISHES.
		;BUT NORMALLY, DEFSYM FOO==BAR DOES FOO==BAR WITH ERROR CHECK.
DEFINE DEFSYM X/
IRPS Z,,[X]
IFNDEF Z,X
.ELSE [
   $$TEM1==Z
   X
   IFN Z-$$TEM1,.ERR Z MULTIPLY .QUOTE`.QUOTE/DEFINED/`
]
.ISTOP
TERMIN TERMIN

IFLE .MLLIT,.ERR .MLLIT MUST BE 1; SETTING IT TO 1.
.MLLIT==1
$$TEMP==1
]
.ELSE $$TEMP==0

; Information here is from EK-DELUA-UG-002.

DEFSYM	%UNVEC==120		;Interrupt vector
DEFSYM	%UNBAS==3,,774510	;Base of Unibus register address space

DEFSYM	%UNR0==%UNBAS		;PCSR0
.BEGIN %UN0			;Bits in PCSR0
 SERI==1_15.			;status error
 PCEI==1_14.			;port command error
 RXI==1_13.			;receive interrupt
 TXI==1_12.			;transmit interrupt
 DNI==1_11.			;done interrupt
 RCBI==1_10.			;receive buffer unavailable interrupt
 FATL==1_9.			;fatal internal error
 USCI==1_8.			;unsolicited state change
 ALLINT==<SERI+PCEI+RXI+TXI+DNI+RCBI+FATL+USCI>
 INTR==1_7.			;or of bits 15-8
 INTE==1_6.			;interrupt enable
 RSET==1_5.			;reset
.END %UN0
.BEGIN %UNCMD			;Command field in PCSR0
 NOP==0
 GETPCB==1
 GETCMD==2
 SLFTST==3
 START==4
 BOOT==5
 PDMD==10			;polling demand
 HALT==16
 STOP==17
.END %UNCMD

DEFSYM	%UNR1==%UNBAS+2		;PCSR1

DEFSYM	%UNR2==%UNBAS+4		;PCSR2

DEFSYM	%UNR3==%UNBAS+6		;PCSR3

.BEGIN %UNAF			;Ancillary function codes in PCB
 NOP==0
 START==1			;start microcode at
 RDDPA==2			;read default physical address
 RDPA==4			;read physical address
 WRPA==5			;write "
 RDMAL==6			;read multicast address list
 WRMAL==7			;write "
 RDDRF==10			;read descriptor ring format
 WRDRF==11			;write "
 RDCTRS==12			;read counters
 RCCTRS==13			;read and clear counters
 RDMODE==14			;read mode register
 WRMODE==15			;write "
 RDSTAT==16			;read status
 RCSTAT==17			;read and clear status
 RDMEM==20			;read internal memory
 WRMEM==21			;write "
 RDSID==22			;read system ID parameters
 WRSID==23			;write "
 RDLSA==24			;read load server address
 WRLSA==25			;write "
.END %UNAF

.BEGIN %UNTD			;Bits in transmit/receive descriptors
 OWN==<1_15.>
 ERRS==<1_14.>
 OFLO==<1_13.>
 STF==<1_9.>
 ENF==<1_8.>
.END %UNTD

;Layout of memory shared with DEUNA.
;Each 1024. x 36-bit ITS page we allocate will be mapped to the Unibus as
;two 1024. x 16-bit Unibus pages.

DEFSYM	%UNNTB==4		;# transmit buffers (even)
DEFSYM	%UNNRB==4		;# receive buffers (>= 2, even)

;First page contains PCB, UDB, transmit/receive ring descriptors in its first
;half. The second half is currently unused.
;Offsets in bytes:
DEFSYM	%UNPCB==0			;Port control block (4 uwds)
DEFSYM	%UNUDB==%UNPCB+<4*2>		;Unibus data block
					;(max 153. words for system ID params,
					;plus 1 to keep TDR 10-word-aligned)
DEFSYM	%UNTDR==%UNUDB+<154.*2>		;Transmit descriptor ring (4 uwds each)
DEFSYM	%UNRDR==%UNTDR+<%UNNTB*8>	;Receive descriptor ring (4 uwds each)
					;(init code assumes R follows T)
IFG %UNRDR+<%UNNRB*8>-<1000*4>, .ERR DEUNA first half-page full

;Remaining pages contain buffers, with one buffer in the first half and one in
;the second half; all the transmit buffers come first, then all the receive
;buffers.
DEFSYM	%UNNPG==1+<%UNNTB/2>+<%UNNRB/2>
DEFSYM	%UNBSZ==2048.
DEFSYM	%UNBOF==2		;Padding at start, so the packet
				;data starts on a PDP-10 word

IFN $$TEMP,EXPUNG DEFSYM
